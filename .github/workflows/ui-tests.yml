# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
name: UI Automation Suite

on:
  push:
    branches: [ "master" ]   # since your repo has 'master' branch
  pull_request:
    branches: [ "master" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Step 2: Set up Java 23.0.2
      - name: Set up JDK 23
        uses: actions/setup-java@v4
        with:
          java-version: '23.0.2'
          distribution: 'temurin'

      # Step 3: Cache Maven dependencies (faster builds)
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Step 4: Build without running tests
      - name: Build Project
        run: mvn clean package -DskipTests

      # Step 5: Run TestNG suite
      - name: Run Tests
        run: mvn test

      # Step 6: Upload build artifact (JAR files)
      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: automation-build
          path: target/*.jar

      # Step 7: Upload Extent Reports
      - name: Upload Extent Report
        uses: actions/upload-artifact@v4
        with:
          name: extent-reports
          path: |
            test-output/**
            reports/**
